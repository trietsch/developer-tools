#!/usr/bin/env bash

if [ "$1" == "--help" ]
then
    echo "Usage: gitlab-clone-all base_dir gitlab_path gitlab_host personal_access_token

  Clones all repos that do not yet exist on your local machine. Respects the GitLab directory grouping.

  To prevent leaking Personal Access Tokens in your shell history, try to use the 1Password CLI, e.g.:

    gitlab-clone-all \"/Users/${USER}/workspace/bol\" \"team2s\" \"gitlab.bol.io\" \$(op read \"op://Private/Gitlab Bol/credential\")

  Ensure that the 1Password secret reference matches the entry in your 1Password account.
  "
    exit 0
else
    BASE_DIR=${1:?"A base directory should be provided, will clone all repos under a directory called 'gitlab' in this base dir."}
    GITLAB_PATH=${2:?"Provide the path (e.g. group) that you'd like to clone."}
    GITLAB_HOST=${3:="gitlab.com"}
    GITLAB_TOKEN=${4:?"A GitLab Personal Access token should be provided."}

    FULL_BASE_DIR="$BASE_DIR/$GITLAB_PATH"

    if [[ "$OSTYPE" == "darwin"* ]]; then
      HEAD="ghead"
      SED="gsed"
    else
      HEAD="head"
      SED="sed"
    fi

    # Get all GitLab repositories under the provided group
    after=null
    projects='[]'
    while true
    do
      gqlquery=$(echo "{
      group(fullPath: \\\"$GITLAB_PATH\\\") {
        projects(includeSubgroups: true, includeArchived: false, first: 50, after: ${after}) {
          count

          pageInfo {
            hasNextPage
            endCursor
          }

          nodes {
            sshUrlToRepo
            httpUrlToRepo
            fullPath
            namespace {
              fullPath
            }
          }
        }
      }
    }" | tr '\n' ' ')
        query="{ \"query\": \"$gqlquery\" }"
        response=$(curl -s -w "%{http_code}" -H "Authorization: Bearer $GITLAB_TOKEN" -H "Content-Type:application/json" -d "$query" "https://$GITLAB_HOST/api/graphql")
        body=$(echo ${response} | $HEAD -c-4)
        response_code=${response: -3}

        if [ "$response_code" != 200 ]; then
            echo "An error occurred while trying to get GitLab repositories. HTTP code: $response_code. Response:"
            echo $body
            exit 1
        fi

        another_page=$(echo "$body" | jq -r '.data.group.projects.pageInfo.hasNextPage')
        nodes=$(echo "$body" | jq -r '.data.group.projects.nodes')
        projects=$(jq --arg projects "$nodes" '. += ($projects | fromjson)' <<< "$projects")

        if $another_page
        then
            after=$(echo \\\"$(echo "$body" | jq -r '.data.group.projects.pageInfo.endCursor')\\\")
        else
            break
        fi
    done

    echo $projects | jq -r '.[]|[.sshUrlToRepo, .fullPath, .namespace.fullPath] | @tsv' |
    while IFS=$'\t' read -r sshUrl repoPath parentPath; do
    fullParentPath="$FULL_BASE_DIR/$(echo "$parentPath" | $SED "s|$GITLAB_PATH/||g")"
    fullRepoPath="$FULL_BASE_DIR/$(echo "$repoPath" | $SED "s|$GITLAB_PATH/||g")"

    if [ ! -d $fullRepoPath ]
    then
        mkdir -p "$FULL_BASE_DIR" && git clone "$sshUrl" "$fullRepoPath" &
    fi
    done

    echo "Finished cloning all repositories."
fi
